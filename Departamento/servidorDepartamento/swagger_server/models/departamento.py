# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Departamento(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cod_id: str=None, nombre: str=None, facultad: str=None, carga_docente: int=None, horas_impartidas: int=None, asignaturas: List[str]=None):
        """
        Departamento - a model defined in Swagger

        :param cod_id: The cod_id of this Departamento.
        :type cod_id: str
        :param nombre: The nombre of this Departamento.
        :type nombre: str
        :param facultad: The facultad of this Departamento.
        :type facultad: str
        :param carga_docente: The carga_docente of this Departamento.
        :type carga_docente: int
        :param horas_impartidas: The horas_impartidas of this Departamento.
        :type horas_impartidas: int
        :param asignaturas: The asignaturas of this Departamento.
        :type asignaturas: List[str]
        """
        self.swagger_types = {
            'cod_id': str,
            'nombre': str,
            'facultad': str,
            'carga_docente': int,
            'horas_impartidas': int,
            'asignaturas': List[str]
        }

        self.attribute_map = {
            'cod_id': 'codID',
            'nombre': 'nombre',
            'facultad': 'facultad',
            'carga_docente': 'carga_docente',
            'horas_impartidas': 'horas_impartidas',
            'asignaturas': 'asignaturas'
        }

        self._cod_id = cod_id
        self._nombre = nombre
        self._facultad = facultad
        self._carga_docente = carga_docente
        self._horas_impartidas = horas_impartidas
        self._asignaturas = asignaturas

    @classmethod
    def from_dict(cls, dikt) -> 'Departamento':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Departamento of this Departamento.
        :rtype: Departamento
        """
        return deserialize_model(dikt, cls)

    @property
    def cod_id(self) -> str:
        """
        Gets the cod_id of this Departamento.

        :return: The cod_id of this Departamento.
        :rtype: str
        """
        return self._cod_id

    @cod_id.setter
    def cod_id(self, cod_id: str):
        """
        Sets the cod_id of this Departamento.

        :param cod_id: The cod_id of this Departamento.
        :type cod_id: str
        """

        self._cod_id = cod_id

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this Departamento.

        :return: The nombre of this Departamento.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this Departamento.

        :param nombre: The nombre of this Departamento.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def facultad(self) -> str:
        """
        Gets the facultad of this Departamento.

        :return: The facultad of this Departamento.
        :rtype: str
        """
        return self._facultad

    @facultad.setter
    def facultad(self, facultad: str):
        """
        Sets the facultad of this Departamento.

        :param facultad: The facultad of this Departamento.
        :type facultad: str
        """

        self._facultad = facultad

    @property
    def carga_docente(self) -> int:
        """
        Gets the carga_docente of this Departamento.

        :return: The carga_docente of this Departamento.
        :rtype: int
        """
        return self._carga_docente

    @carga_docente.setter
    def carga_docente(self, carga_docente: int):
        """
        Sets the carga_docente of this Departamento.

        :param carga_docente: The carga_docente of this Departamento.
        :type carga_docente: int
        """

        self._carga_docente = carga_docente

    @property
    def horas_impartidas(self) -> int:
        """
        Gets the horas_impartidas of this Departamento.

        :return: The horas_impartidas of this Departamento.
        :rtype: int
        """
        return self._horas_impartidas

    @horas_impartidas.setter
    def horas_impartidas(self, horas_impartidas: int):
        """
        Sets the horas_impartidas of this Departamento.

        :param horas_impartidas: The horas_impartidas of this Departamento.
        :type horas_impartidas: int
        """

        self._horas_impartidas = horas_impartidas

    @property
    def asignaturas(self) -> List[str]:
        """
        Gets the asignaturas of this Departamento.

        :return: The asignaturas of this Departamento.
        :rtype: List[str]
        """
        return self._asignaturas

    @asignaturas.setter
    def asignaturas(self, asignaturas: List[str]):
        """
        Sets the asignaturas of this Departamento.

        :param asignaturas: The asignaturas of this Departamento.
        :type asignaturas: List[str]
        """

        self._asignaturas = asignaturas

