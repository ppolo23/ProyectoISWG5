# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Asignatura(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, nombre: str=None, codigo: str=None, tipo: str=None, num_creditos: int=None, curso: int=None):
        """
        Asignatura - a model defined in Swagger

        :param nombre: The nombre of this Asignatura.
        :type nombre: str
        :param codigo: The codigo of this Asignatura.
        :type codigo: str
        :param tipo: The tipo of this Asignatura.
        :type tipo: str
        :param num_creditos: The num_creditos of this Asignatura.
        :type num_creditos: int
        :param curso: The curso of this Asignatura.
        :type curso: int
        """
        self.swagger_types = {
            'nombre': str,
            'codigo': str,
            'tipo': str,
            'num_creditos': int,
            'curso': int
        }

        self.attribute_map = {
            'nombre': 'nombre',
            'codigo': 'codigo',
            'tipo': 'tipo',
            'num_creditos': 'numCreditos',
            'curso': 'curso'
        }

        self._nombre = nombre
        self._codigo = codigo
        self._tipo = tipo
        self._num_creditos = num_creditos
        self._curso = curso

    @classmethod
    def from_dict(cls, dikt) -> 'Asignatura':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Asignatura of this Asignatura.
        :rtype: Asignatura
        """
        return deserialize_model(dikt, cls)

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this Asignatura.

        :return: The nombre of this Asignatura.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this Asignatura.

        :param nombre: The nombre of this Asignatura.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def codigo(self) -> str:
        """
        Gets the codigo of this Asignatura.

        :return: The codigo of this Asignatura.
        :rtype: str
        """
        return self._codigo

    @codigo.setter
    def codigo(self, codigo: str):
        """
        Sets the codigo of this Asignatura.

        :param codigo: The codigo of this Asignatura.
        :type codigo: str
        """

        self._codigo = codigo

    @property
    def tipo(self) -> str:
        """
        Gets the tipo of this Asignatura.

        :return: The tipo of this Asignatura.
        :rtype: str
        """
        return self._tipo

    @tipo.setter
    def tipo(self, tipo: str):
        """
        Sets the tipo of this Asignatura.

        :param tipo: The tipo of this Asignatura.
        :type tipo: str
        """
        allowed_values = ["Obligatoria", "Transversal", "Optativa"]
        if tipo not in allowed_values:
            raise ValueError(
                "Invalid value for `tipo` ({0}), must be one of {1}"
                .format(tipo, allowed_values)
            )

        self._tipo = tipo

    @property
    def num_creditos(self) -> int:
        """
        Gets the num_creditos of this Asignatura.

        :return: The num_creditos of this Asignatura.
        :rtype: int
        """
        return self._num_creditos

    @num_creditos.setter
    def num_creditos(self, num_creditos: int):
        """
        Sets the num_creditos of this Asignatura.

        :param num_creditos: The num_creditos of this Asignatura.
        :type num_creditos: int
        """

        self._num_creditos = num_creditos

    @property
    def curso(self) -> int:
        """
        Gets the curso of this Asignatura.

        :return: The curso of this Asignatura.
        :rtype: int
        """
        return self._curso

    @curso.setter
    def curso(self, curso: int):
        """
        Sets the curso of this Asignatura.

        :param curso: The curso of this Asignatura.
        :type curso: int
        """

        self._curso = curso

